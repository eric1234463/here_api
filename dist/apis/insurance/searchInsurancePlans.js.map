{"version":3,"sources":["../../../src/apis/insurance/searchInsurancePlans.js"],"names":["req","res","next","patientHealthStatus","findAll","where","patientId","body","order","limit","userHealthStatus","condtion","search","provider","$eq","surgery_cover","$gte","daliy_cover","InsurancePlan","insurancePlans","result","map","insuranceUserPlan","insurancePlan","similarity","dataValues","rank","value","json","searchInsurancePlans"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;sFAEe,iBAAoCA,GAApC,EAAyCC,GAAzC,EAA8CC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkB,iBAAOC,mBAAP,CAA2BC,OAA3B,CAAmC;AAChEC,qBAAO;AACLC,2BAAWN,IAAIO,IAAJ,CAASD;AADf,eADyD;AAIhEE,qBAAO,CAAE,CAAE,WAAF,EAAe,MAAf,CAAF,CAJyD;AAKhEC,qBAAO;AALyD,aAAnC,CADlB;;AAAA;AACPC,4BADO;AASTC,oBATS,GASE;AACbH,qBAAO,CAAC,CAAC,IAAD,EAAO,KAAP,CAAD,CADM;AAEbH,qBAAM;AAFO,aATF;;;AAcb,gBAAI,CAAC,CAACL,IAAIO,IAAJ,CAASK,MAAT,CAAgBC,QAAtB,EAAgC;AAC9BF,uBAAS,OAAT,EAAkB,UAAlB,IAAgC;AAC9BG,qBAAKd,IAAIO,IAAJ,CAASK,MAAT,CAAgBC;AADS,eAAhC;AAGD;;AAED,gBAAI,CAAC,CAACb,IAAIO,IAAJ,CAASK,MAAT,CAAgBG,aAAtB,EAAqC;AACnCJ,uBAAS,OAAT,EAAkB,eAAlB,IAAqC;AACnCK,sBAAMhB,IAAIO,IAAJ,CAASK,MAAT,CAAgBG;AADa,eAArC;AAGD;;AAED,gBAAI,CAAC,CAACf,IAAIO,IAAJ,CAASK,MAAT,CAAgBK,WAAtB,EAAmC;AACjCN,uBAAS,OAAT,EAAkB,aAAlB,IAAmC;AACjCK,sBAAMhB,IAAIO,IAAJ,CAASK,MAAT,CAAgBK;AADW,eAAnC;AAGD;;AA9BY;AAAA,mBAgCgB,iBAAOC,aAAP,CAAqBd,OAArB,CAA6BO,QAA7B,CAhChB;;AAAA;AAgCPQ,0BAhCO;AAkCPC,kBAlCO,GAkCED,eAAeE,GAAf,CAAmB,yBAAiB;AACjD,kBAAMC,+CACDC,aADC;AAEJC,4BAAYD,cAAcE,UAAd,CAAyBC,IAAzB,GAAgChB,iBAAiB,CAAjB,EAAoBe,UAApB,CAA+BE;AAFvE,gBAAN;AAIA,qBAAOL,iBAAP;AACD,aANc,CAlCF;;;AA0CbrB,gBAAI2B,IAAJ,CAASR,MAAT;;AA1Ca;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeS,oB;;;;SAAAA,oB","file":"searchInsurancePlans.js","sourcesContent":["import models from \"../../../models\";\n\nexport default async function searchInsurancePlans(req, res, next) {\n  const userHealthStatus = await models.patientHealthStatus.findAll({\n    where: {\n      patientId: req.body.patientId,\n    },\n    order: [ [ 'createdAt', 'DESC' ]],\n    limit: 1,\n  });\n  \n  let condtion = {\n    order: [[\"id\", \"ASC\"]],\n    where:{}\n  };\n\n  if (!!req.body.search.provider) {\n    condtion['where']['provider'] = {\n      $eq: req.body.search.provider\n    };\n  }\n\n  if (!!req.body.search.surgery_cover) {\n    condtion['where']['surgery_cover'] = {\n      $gte: req.body.search.surgery_cover\n    };\n  }\n\n  if (!!req.body.search.daliy_cover) {\n    condtion['where']['daliy_cover'] = {\n      $gte: req.body.search.daliy_cover\n    };\n  }\n\n  const insurancePlans = await models.InsurancePlan.findAll(condtion);\n\n  const result = insurancePlans.map(insurancePlan => {\n    const insuranceUserPlan = {\n      ...insurancePlan,\n      similarity: insurancePlan.dataValues.rank / userHealthStatus[0].dataValues.value\n    }\n    return insuranceUserPlan;\n  });\n\n  res.json(result);\n}\n"]}