{"version":3,"sources":["../../../src/apis/patient/getBiologicalClock.js"],"names":["getBiologicalClock","req","res","next","patientBiologicalClock","findAll","where","patientId","query","createdAt","$between","from","to","then","dates","jsonData","map","sleepData","obj","type","time","format","wakeData","console","log","result","label","data","json"],"mappings":";;;;;kBAGwBA,kB;;AAHxB;;;;AACA;;;;AACA;;;;;;AACe,SAASA,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4C;AACvD,qBAAOC,sBAAP,CACKC,OADL,CACa;AACLC,eAAO;AACHC,uBAAWN,IAAIO,KAAJ,CAAUD,SADlB;AAEHE,uBAAW;AACPC,0BAAU,CAACT,IAAIO,KAAJ,CAAUG,IAAX,EAAiBV,IAAIO,KAAJ,CAAUI,EAA3B;AADH;AAFR;AADF,KADb,EAQOC,IARP,CAQY,UAACC,KAAD,EAAW;AACf,YAAMC,WAAW,iBAAEC,GAAF,CAAMF,KAAN,EAAa,YAAb,CAAjB;AACA,YAAMG,YAAY,iBAAED,GAAF,CAAMD,QAAN,EAAgB,UAACG,GAAD,EAAS;AACvC,gBAAIA,IAAIC,IAAJ,IAAY,OAAhB,EAAyB;AACrB,oBAAMC,OAAO,sBAAOF,IAAIT,SAAX,EAAsBY,MAAtB,CAA6B,MAA7B,CAAb;AACA,uBAAOD,IAAP;AACH;AACJ,SALiB,CAAlB;AAMA,YAAME,WAAW,iBAAEN,GAAF,CAAMD,QAAN,EAAgB,UAACG,GAAD,EAAS;AACtC,gBAAIA,IAAIC,IAAJ,KAAa,MAAjB,EAAyB;AACrB,oBAAMC,OAAO,sBAAOF,IAAIT,SAAX,EAAsBY,MAAtB,CAA6B,MAA7B,CAAb;AACA,uBAAOD,IAAP;AACH;AACJ,SALgB,CAAjB;AAMAG,gBAAQC,GAAR,CAAYF,QAAZ;AACA,YAAMG,SAAS,CAAC;AACZC,mBAAO,OADK;AAEZC,kBAAMV;AAFM,SAAD,EAGZ;AACCS,mBAAO,MADR;AAECC,kBAAML;AAFP,SAHY,CAAf;AAOApB,YAAI0B,IAAJ,CAASH,MAAT;AACH,KA/BL;AAgCH","file":"getBiologicalClock.js","sourcesContent":["import models from '../../../models';\nimport _ from 'lodash';\nimport moment from 'moment';\nexport default function getBiologicalClock(req, res, next) {\n    models.patientBiologicalClock\n        .findAll({\n            where: {\n                patientId: req.query.patientId,\n                createdAt: {\n                    $between: [req.query.from, req.query.to]\n                }\n            },\n        }).then((dates) => {\n            const jsonData = _.map(dates, 'dataValues');\n            const sleepData = _.map(jsonData, (obj) => {\n                if (obj.type == 'SLEEP') {\n                    const time = moment(obj.createdAt).format('h:mm');\n                    return time;\n                }\n            });\n            const wakeData = _.map(jsonData, (obj) => {\n                if (obj.type === 'WAKE') {\n                    const time = moment(obj.createdAt).format('h:mm');\n                    return time;\n                }\n            });\n            console.log(wakeData);\n            const result = [{\n                label: 'SLEEP',\n                data: sleepData\n            }, {\n                label: 'WAKE',\n                data: wakeData\n            }];\n            res.json(result);\n        });\n}\n"]}