{"version":3,"sources":["../../../src/apis/record/createRecord.js"],"names":["req","res","next","colorClass","recordPayload","description","body","record","doctorId","patientId","Record","create","medicines","index","randomClass","Math","round","random","RecordMedicine","medicineId","recordId","dataValues","id","class","factors","RecordFactor","factorId","json","created","createRecord"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;wFAEe,iBAA4BA,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,kCADK,GACQ,CACf,mBADe,EAEf,iBAFe,EAGf,gBAHe,EAIf,iBAJe,EAKf,mBALe,EAMf,wBANe,EAOf,mBAPe,CADR;AAULC,qCAVK,GAUW;AAClBC,yCAAaL,IAAIM,IAAJ,CAASC,MAAT,CAAgBF,WADX;AAElBG,sCAAUR,IAAIM,IAAJ,CAASC,MAAT,CAAgBC,QAFR;AAGlBC,uCAAYT,IAAIM,IAAJ,CAASC,MAAT,CAAgBE;AAHV,yBAVX;AAAA;AAAA,+BAeU,iBAAOC,MAAP,CAAcC,MAAd,CAAqBP,aAArB,CAfV;;AAAA;AAeLG,8BAfK;;AAAA,6BAgBPP,IAAIM,IAAJ,CAASM,SAhBF;AAAA;AAAA;AAAA;;AAAA,iEAiBWZ,IAAIM,IAAJ,CAASM,SAjBpB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBEC,6BAjBF;AAkBCC,mCAlBD,GAkBeX,WAAWY,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAX,CAlBf;AAAA;AAAA,+BAmBG,iBAAOC,cAAP,CAAsBP,MAAtB,CAA6B;AAC/BQ,wCAAYnB,IAAIM,IAAJ,CAASM,SAAT,CAAmBC,KAAnB,CADmB;AAE/BO,sCAAUb,OAAOc,UAAP,CAAkBC,EAFG;AAG/BC,mCAAOT;AAHwB,yBAA7B,CAnBH;;AAAA;AAAA;AAAA;;AAAA;AAwBN;;AAxBM;AAyBV;;AAzBU,6BA2BPd,IAAIM,IAAJ,CAASkB,OA3BF;AAAA;AAAA;AAAA;;AAAA,iEA4BWxB,IAAIM,IAAJ,CAASkB,OA5BpB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BEX,8BA5BF;AA6BCC,oCA7BD,GA6BeX,WAAWY,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAX,CA7Bf;AAAA;AAAA,+BA8BG,iBAAOQ,YAAP,CAAoBd,MAApB,CAA2B;AAC7Be,sCAAU1B,IAAIM,IAAJ,CAASkB,OAAT,CAAiBX,MAAjB,CADmB;AAE7BO,sCAAUb,OAAOc,UAAP,CAAkBC,EAFC;AAG7BC,mCAAOT;AAHsB,yBAA3B,CA9BH;;AAAA;AAAA;AAAA;;AAAA;AAmCN;;AAnCM;AAoCV;;AAEDb,4BAAI0B,IAAJ,CAAS;AACLC,qCAAS;AADJ,yBAAT;;AAtCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;aAAeC,Y;;;;WAAAA,Y","file":"createRecord.js","sourcesContent":["import models from '../../../models';\n\nexport default async function createRecord(req, res, next) {\n    const colorClass = [\n        'mat-orange-500-bg',\n        'mat-cyan-500-bg',\n        'mat-red-500-bg',\n        'mat-pink-500-bg',\n        'mat-purple-500-bg',\n        'mat-deep-purple-500-bg',\n        'mat-indigo-500-bg'\n    ];\n    const recordPayload = {\n        description: req.body.record.description,\n        doctorId: req.body.record.doctorId,\n        patientId:  req.body.record.patientId\n    }\n    const record = await models.Record.create(recordPayload);\n    if (req.body.medicines) {\n        for (let index in req.body.medicines) {\n            let randomClass = colorClass[Math.round(Math.random() * 6)];\n            await models.RecordMedicine.create({\n                medicineId: req.body.medicines[index],\n                recordId: record.dataValues.id,\n                class: randomClass\n            })\n        };\n    };\n\n    if (req.body.factors) {\n        for (let index in req.body.factors) {\n            let randomClass = colorClass[Math.round(Math.random() * 6)];\n            await models.RecordFactor.create({\n                factorId: req.body.factors[index],\n                recordId: record.dataValues.id,\n                class: randomClass\n            })\n        };\n    };\n\n    res.json({\n        created: true\n    })\n}\n"]}