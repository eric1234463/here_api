{"version":3,"sources":["../../../src/apis/record/createRecord.js"],"names":["req","res","next","colorClass","recordPayload","title","body","record","description","doctorId","patientId","Record","create","medicines","index","randomClass","Math","round","random","RecordMedicine","medicineId","recordId","dataValues","id","class","factors","RecordFactor","factorId","json","created","createRecord"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;wFAEe,iBAA4BA,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,kCADK,GACQ,CACf,mBADe,EAEf,iBAFe,EAGf,gBAHe,EAIf,iBAJe,EAKf,mBALe,EAMf,wBANe,EAOf,mBAPe,CADR;AAULC,qCAVK,GAUW;AAClBC,mCAAOL,IAAIM,IAAJ,CAASC,MAAT,CAAgBF,KADL;AAElBG,yCAAaR,IAAIM,IAAJ,CAASC,MAAT,CAAgBC,WAFX;AAGlBC,sCAAUT,IAAIM,IAAJ,CAASC,MAAT,CAAgBE,QAHR;AAIlBC,uCAAYV,IAAIM,IAAJ,CAASC,MAAT,CAAgBG;AAJV,yBAVX;AAAA;AAAA,+BAgBU,iBAAOC,MAAP,CAAcC,MAAd,CAAqBR,aAArB,CAhBV;;AAAA;AAgBLG,8BAhBK;;AAAA,6BAiBPP,IAAIM,IAAJ,CAASO,SAjBF;AAAA;AAAA;AAAA;;AAAA,iEAkBWb,IAAIM,IAAJ,CAASO,SAlBpB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBEC,6BAlBF;AAmBCC,mCAnBD,GAmBeZ,WAAWa,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAX,CAnBf;AAAA;AAAA,+BAoBG,iBAAOC,cAAP,CAAsBP,MAAtB,CAA6B;AAC/BQ,wCAAYpB,IAAIM,IAAJ,CAASO,SAAT,CAAmBC,KAAnB,CADmB;AAE/BO,sCAAUd,OAAOe,UAAP,CAAkBC,EAFG;AAG/BC,mCAAOT;AAHwB,yBAA7B,CApBH;;AAAA;AAAA;AAAA;;AAAA;AAyBN;;AAzBM;AA0BV;;AA1BU,6BA4BPf,IAAIM,IAAJ,CAASmB,OA5BF;AAAA;AAAA;AAAA;;AAAA,iEA6BWzB,IAAIM,IAAJ,CAASmB,OA7BpB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BEX,8BA7BF;AA8BCC,oCA9BD,GA8BeZ,WAAWa,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAX,CA9Bf;AAAA;AAAA,+BA+BG,iBAAOQ,YAAP,CAAoBd,MAApB,CAA2B;AAC7Be,sCAAU3B,IAAIM,IAAJ,CAASmB,OAAT,CAAiBX,MAAjB,CADmB;AAE7BO,sCAAUd,OAAOe,UAAP,CAAkBC,EAFC;AAG7BC,mCAAOT;AAHsB,yBAA3B,CA/BH;;AAAA;AAAA;AAAA;;AAAA;AAoCN;;AApCM;AAqCV;;AAEDd,4BAAI2B,IAAJ,CAAS;AACLC,qCAAS;AADJ,yBAAT;;AAvCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;aAAeC,Y;;;;WAAAA,Y","file":"createRecord.js","sourcesContent":["import models from '../../../models';\n\nexport default async function createRecord(req, res, next) {\n    const colorClass = [\n        'mat-orange-500-bg',\n        'mat-cyan-500-bg',\n        'mat-red-500-bg',\n        'mat-pink-500-bg',\n        'mat-purple-500-bg',\n        'mat-deep-purple-500-bg',\n        'mat-indigo-500-bg'\n    ];\n    const recordPayload = {\n        title: req.body.record.title,\n        description: req.body.record.description,\n        doctorId: req.body.record.doctorId,\n        patientId:  req.body.record.patientId\n    }\n    const record = await models.Record.create(recordPayload);\n    if (req.body.medicines) {\n        for (let index in req.body.medicines) {\n            let randomClass = colorClass[Math.round(Math.random() * 6)];\n            await models.RecordMedicine.create({\n                medicineId: req.body.medicines[index],\n                recordId: record.dataValues.id,\n                class: randomClass\n            })\n        };\n    };\n\n    if (req.body.factors) {\n        for (let index in req.body.factors) {\n            let randomClass = colorClass[Math.round(Math.random() * 6)];\n            await models.RecordFactor.create({\n                factorId: req.body.factors[index],\n                recordId: record.dataValues.id,\n                class: randomClass\n            })\n        };\n    };\n\n    res.json({\n        created: true\n    })\n}\n"]}