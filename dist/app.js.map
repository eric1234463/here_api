{"version":3,"sources":["../src/app.js"],"names":["apiHandlers","require","app","server","Server","io","port","process","env","PORT","use","set","json","urlencoded","extended","options","req","res","next","header","send","method","err","Error","status","locals","message","error","get","render","on","socket","room","console","log","join","data","broadcast","to","emit","patient","listen","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport http from 'http';\nimport SocketIO from 'socket.io';\nlet apiHandlers = require('./apis');\nlet app = express();\nlet server = http.Server(app);\nlet io = new SocketIO(server);\n\nlet port = process.env.PORT || 8080;\n\n// view engine setup\napp.use(cors());\napp.set('view engine', 'html');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n\napp.options(\"/*\", function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE, OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n  res.send(200);\n});\n\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  if ('OPTIONS' === req.method) {\n    //respond with 200\n    res.send(200);\n  }\n  else {\n    //move on\n    next();\n  }\n\n});\n\napp.use('/api', apiHandlers);\n\napp.use(function (req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n\n// error handler\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n\nio.on('connection', (socket) => {\n  socket.on('subscribe', function (room) {\n    console.log('joining room', room);\n    socket.join(room);\n  });\n\n  socket.on('connect doctor', function (data) {\n    socket.broadcast.to(data.room).emit('connect doctor', {\n      patient: data.patient\n    });\n  });\n  socket.on('cancel connection', function (data) {\n    console.log('cancel connection', data);\n    socket.broadcast.to(data.room).emit('cancel doctor', {\n      patient: data.patient\n    });\n  });\n});\n\nserver.listen(port, function () {\n  console.log('listening on *:' + port);\n});\nmodule.exports = { app: app, server: server };\n"]}